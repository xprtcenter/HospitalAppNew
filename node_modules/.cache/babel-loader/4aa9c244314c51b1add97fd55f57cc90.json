{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{createStructuredSelector}from\"reselect\";import{withRouter}from\"react-router-dom\";import{selectCartItems}from\"../../redux/cart/cart.selectors\";import CustomButton from\"../custom-button/custom-button.component\";import CartItem from\"../cart-item/cart-item.component\";import{toggleCartHidden}from\"../../redux/cart/cart.action\";import\"./cart-dropdown.styles.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CartDropdown=function CartDropdown(_ref){var cartItems=_ref.cartItems,history=_ref.history,dispatch=_ref.dispatch;return/*#__PURE__*/_jsxs(\"div\",{className:\"cart-dropdown\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cartItems.length?cartItems.map(function(cartItem){return/*#__PURE__*/_jsx(CartItem,{item:cartItem},cartItem.id);}):/*#__PURE__*/_jsx(\"span\",{className:\"empty-message\",children:\" Your cart is empty\"})}),/*#__PURE__*/_jsx(CustomButton,{onClick:function onClick(){history.push(\"/checkout\");dispatch(toggleCartHidden());},children:\"GO TO CHECKOUT\"})]});};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems});export default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/src/component/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","selectCartItems","CustomButton","CartItem","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OAASC,eAAT,KAAgC,iCAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,OAASC,gBAAT,KAAiC,8BAAjC,CACA,MAAO,6BAAP,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,OAAd,MAAcA,OAAd,CAAuBC,QAAvB,MAAuBA,QAAvB,oBACpB,aAAK,SAAS,CAAC,eAAf,wBACC,YAAK,SAAS,CAAC,YAAf,UACEF,SAAS,CAACG,MAAV,CACAH,SAAS,CAACI,GAAV,CAAc,SAACC,QAAD,qBACb,KAAC,QAAD,EAA4B,IAAI,CAAEA,QAAlC,EAAeA,QAAQ,CAACC,EAAxB,CADa,EAAd,CADA,cAKA,aAAM,SAAS,CAAC,eAAhB,iCANF,EADD,cAUC,KAAC,YAAD,EACC,OAAO,CAAE,kBAAM,CACdL,OAAO,CAACM,IAAR,CAAa,WAAb,EAEAL,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR,CACA,CALF,4BAVD,GADoB,EAArB,CAuBA,GAAMU,CAAAA,eAAe,CAAGf,wBAAwB,CAAC,CAChDO,SAAS,CAAEL,eADqC,CAAD,CAAhD,CAIA,cAAeD,CAAAA,UAAU,CAACF,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport CartItem from \"../cart-item/cart-item.component\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\r\nimport \"./cart-dropdown.styles.scss\";\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n\t<div className=\"cart-dropdown\">\r\n\t\t<div className=\"cart-items\">\r\n\t\t\t{cartItems.length ? (\r\n\t\t\t\tcartItems.map((cartItem) => (\r\n\t\t\t\t\t<CartItem key={cartItem.id} item={cartItem} />\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<span className=\"empty-message\"> Your cart is empty</span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t<CustomButton\r\n\t\t\tonClick={() => {\r\n\t\t\t\thistory.push(\"/checkout\");\r\n\r\n\t\t\t\tdispatch(toggleCartHidden());\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\tGO TO CHECKOUT\r\n\t\t</CustomButton>\r\n\t</div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tcartItems: selectCartItems,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}