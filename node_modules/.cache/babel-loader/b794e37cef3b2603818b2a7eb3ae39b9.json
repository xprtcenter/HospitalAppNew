{"ast":null,"code":"import _regeneratorRuntime from \"D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar config = {\n  apiKey: \"AIzaSyCCLLEUyHEZZUThEJqwPTY4pI6D1x70J6o\",\n  authDomain: \"crwn-db-fbee8.firebaseapp.com\",\n  projectId: \"crwn-db-fbee8\",\n  storageBucket: \"crwn-db-fbee8.appspot.com\",\n  messagingSenderId: \"1010796874722\",\n  appId: \"1:1010796874722:web:981ab45d4413393273c7bb\",\n  measurementId: \"G-R76F0D4ST5\"\n};\nexport var createUserProfileDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth, additionalData) {\n    var userRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (userAuth) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n            _context.next = 5;\n            return userRef.get();\n\n          case 5:\n            snapShot = _context.sent;\n\n            if (snapShot.exists) {\n              _context.next = 17;\n              break;\n            }\n\n            displayName = userAuth.displayName, email = userAuth.email;\n            createdAt = new Date();\n            _context.prev = 9;\n            _context.next = 12;\n            return userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              createdAt: createdAt\n            }, additionalData));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](9);\n            console.log(\"error creting user\", _context.t0.message);\n\n          case 17:\n            return _context.abrupt(\"return\", userRef);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 14]]);\n  }));\n\n  return function createUserProfileDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nfirebase.initializeApp(config);\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore();\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(provider);\n}; //export default firebase;","map":{"version":3,"sources":["D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,+BAFE;AAGdC,EAAAA,SAAS,EAAE,eAHG;AAIdC,EAAAA,aAAa,EAAE,2BAJD;AAKdC,EAAAA,iBAAiB,EAAE,eALL;AAMdC,EAAAA,KAAK,EAAE,4CANO;AAOdC,EAAAA,aAAa,EAAE;AAPD,CAAf;AAUA,OAAO,IAAMC,yBAAyB;AAAA,sEAAG,iBAAOC,QAAP,EAAiBC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACnCD,QADmC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGlCE,YAAAA,OAHkC,GAGxBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHwB;AAAA;AAAA,mBAKjBH,OAAO,CAACI,GAAR,EALiB;;AAAA;AAKlCC,YAAAA,QALkC;;AAAA,gBAOnCA,QAAQ,CAACC,MAP0B;AAAA;AAAA;AAAA;;AAQ/BC,YAAAA,WAR+B,GAQRT,QARQ,CAQ/BS,WAR+B,EAQlBC,KARkB,GAQRV,QARQ,CAQlBU,KARkB;AASjCC,YAAAA,SATiC,GASrB,IAAIC,IAAJ,EATqB;AAAA;AAAA;AAAA,mBAYhCV,OAAO,CAACW,GAAR;AACLJ,cAAAA,WAAW,EAAXA,WADK;AAELC,cAAAA,KAAK,EAALA,KAFK;AAGLC,cAAAA,SAAS,EAATA;AAHK,eAIFV,cAJE,EAZgC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBtCa,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,YAAMC,OAAxC;;AAnBsC;AAAA,6CAuBjCd,OAvBiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAzBH,yBAAyB;AAAA;AAAA;AAAA,GAA/B;AA0BPT,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,IAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,IAAMf,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,IAAMgB,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN;AAAA,CAAzB,C,CAEP","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCCLLEUyHEZZUThEJqwPTY4pI6D1x70J6o\",\r\n\tauthDomain: \"crwn-db-fbee8.firebaseapp.com\",\r\n\tprojectId: \"crwn-db-fbee8\",\r\n\tstorageBucket: \"crwn-db-fbee8.appspot.com\",\r\n\tmessagingSenderId: \"1010796874722\",\r\n\tappId: \"1:1010796874722:web:981ab45d4413393273c7bb\",\r\n\tmeasurementId: \"G-R76F0D4ST5\",\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif (!userAuth) return;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\tconst snapShot = await userRef.get();\r\n\r\n\tif (!snapShot.exists) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\t...additionalData,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error creting user\", error.message);\r\n\t\t}\r\n\t}\r\n\r\n\treturn userRef;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n//export default firebase;\r\n"]},"metadata":{},"sourceType":"module"}