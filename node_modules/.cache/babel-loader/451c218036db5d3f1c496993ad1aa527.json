{"ast":null,"code":"import _regeneratorRuntime from\"D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/firestore\";import\"firebase/auth\";var config={apiKey:\"AIzaSyCCLLEUyHEZZUThEJqwPTY4pI6D1x70J6o\",authDomain:\"crwn-db-fbee8.firebaseapp.com\",projectId:\"crwn-db-fbee8\",storageBucket:\"crwn-db-fbee8.appspot.com\",messagingSenderId:\"1010796874722\",appId:\"1:1010796874722:web:981ab45d4413393273c7bb\",measurementId:\"G-R76F0D4ST5\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt,role;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=18;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();role=[\"user\"];_context.prev=10;_context.next=13;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt,role:role},additionalData));case 13:_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](10);alert(\"error creting user\",_context.t0.message);case 18:return _context.abrupt(\"return\",userRef);case 19:case\"end\":return _context.stop();}}},_callee,null,[[10,15]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:\"select_account\"});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["D:/Work/Project/ReactJs/UdemyCourse/HospitalApp/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","role","set","alert","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"8eAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACdC,MAAM,CAAE,yCADM,CAEdC,UAAU,CAAE,+BAFE,CAGdC,SAAS,CAAE,eAHG,CAIdC,aAAa,CAAE,2BAJD,CAKdC,iBAAiB,CAAE,eALL,CAMdC,KAAK,CAAE,4CANO,CAOdC,aAAa,CAAE,cAPD,CAAf,CAUA,MAAO,IAAMC,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,2KACnCD,QADmC,iEAGlCE,OAHkC,CAGxBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHwB,uBAKjBH,CAAAA,OAAO,CAACI,GAAR,EALiB,QAKlCC,QALkC,kBAOnCA,QAAQ,CAACC,MAP0B,0BAQ/BC,WAR+B,CAQRT,QARQ,CAQ/BS,WAR+B,CAQlBC,KARkB,CAQRV,QARQ,CAQlBU,KARkB,CAUjCC,SAViC,CAUrB,GAAIC,CAAAA,IAAJ,EAVqB,CAYnCC,IAZmC,CAY5B,CAAC,MAAD,CAZ4B,yCAehCX,CAAAA,OAAO,CAACY,GAAR,gBACLL,WAAW,CAAXA,WADK,CAELC,KAAK,CAALA,KAFK,CAGLC,SAAS,CAATA,SAHK,CAILE,IAAI,CAAJA,IAJK,EAKFZ,cALE,EAfgC,2FAuBtCc,KAAK,CAAC,oBAAD,CAAuB,YAAMC,OAA7B,CAAL,CAvBsC,wCA2BjCd,OA3BiC,wEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CA8BPT,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB,EAEA,MAAO,IAAM2B,CAAAA,IAAI,CAAG5B,QAAQ,CAAC4B,IAAT,EAAb,CAEP,MAAO,IAAMf,CAAAA,SAAS,CAAGb,QAAQ,CAACa,SAAT,EAAlB,CAEP,GAAMgB,CAAAA,QAAQ,CAAG,GAAI7B,CAAAA,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB,CAEAD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe7B,CAAAA,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCCLLEUyHEZZUThEJqwPTY4pI6D1x70J6o\",\r\n\tauthDomain: \"crwn-db-fbee8.firebaseapp.com\",\r\n\tprojectId: \"crwn-db-fbee8\",\r\n\tstorageBucket: \"crwn-db-fbee8.appspot.com\",\r\n\tmessagingSenderId: \"1010796874722\",\r\n\tappId: \"1:1010796874722:web:981ab45d4413393273c7bb\",\r\n\tmeasurementId: \"G-R76F0D4ST5\",\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif (!userAuth) return;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\tconst snapShot = await userRef.get();\r\n\r\n\tif (!snapShot.exists) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\tvar role = [\"user\"];\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\trole,\r\n\t\t\t\t...additionalData,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\talert(\"error creting user\", error.message);\r\n\t\t}\r\n\t}\r\n\r\n\treturn userRef;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}